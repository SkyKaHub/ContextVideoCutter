exclude: |
  (?x)^(
      .*\{\{.*\}\}.*|     # Exclude any files with cookiecutter variables
      docs/site/.*|       # Exclude mkdocs compiled files
      \.history/.*|       # Exclude history files
      .*cache.*/.*|       # Exclude cache directories
      .*venv.*/.*|        # Exclude virtual environment directories
  )$
default_install_hook_types:
  - pre-commit
default_stages: [pre-commit]

repos:
# ---------------------------------------------------------------------------- #
#                              🔄 Pre-Commit Hooks                             #
# ---------------------------------------------------------------------------- #

# ----------------------------- 🔒 Security Tools ---------------------------- #
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: "🔒 security · Detect hardcoded secrets by detect-secrets"
        ## Generated by `detect-secrets scan --exclude-files '(tests|mock_data)/.*' > .secrets.baseline`
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(tests|mock_data)/.*

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.25.1
    hooks:
      - id: gitleaks
        name: "🔒 security · Detect hardcoded secrets by gitleaks"

# --------------------------- 🔍 Code Quality Tools -------------------------- #
  ### Python Tools ###
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.8
    hooks:
      - id: ruff-format
        name: "🐍 python · Format with Ruff"
      # Строгая проверка, если хотите детального ревью, то следует убрать комментарии
      # - id: ruff
      #   name: "🐍 python · Lint and perform safe auto-fixes with Ruff"
      #   args: [--fix]

  ### Syntax ###
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        name: "📝 codespell · Validate files for spelling errors"
        args: ['-I', '.codespell-exclude-words']
        additional_dependencies:
          - tomli

# ---------------------------- 📁 Filesystem Tools --------------------------- #
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Filesystem Checks
      - id: trailing-whitespace
        name: "📁 filesystem/⌨️ whitespaces · Verify shebang presence"
      - id: end-of-file-fixer
        name: "📁 filesystem/⌨️ eof · Makes sure files end in a newline and only a newline"
      - id: detect-private-key
        name: "📁 filesystem/🔒 security · Checks for the existence of private keys"
      - id: check-executables-have-shebangs
        name: "📁 filesystem/⚙️ exec · Verify shebang presence"
      - id: check-shebang-scripts-are-executable
        name: "📁 filesystem/⚙️ exec · Verify script permissions"
      - id: check-case-conflict
        name: "📁 filesystem/📝 names · Check case sensitivity"
      - id: mixed-line-ending
        name: "📁 filesystem/⌨️ line ending · Replaces or checks mixed line ending"
        args: [--fix=lf]
# ------------------------------- 🌳 Git Tools ------------------------------- #
      - id: check-merge-conflict
        name: "🌳 git · Detect conflict markers"
      - id: check-added-large-files
        name: "🌳 git · Block large file commits"
        args: [--maxkb=5120]

# ---------------------------- 🐌 Selfcheck ---------------------------------- #
  - repo: meta
    hooks:
      - id: check-hooks-apply
        name: "🦟 pre-commit · Ensures that the configured hooks apply to at least one file in the repository"

# ---------------------------------------------------------------------------- #
#                             🧪 Fast Tests (Local)                            #
# ---------------------------------------------------------------------------- #
  - repo: local
    hooks:
      - id: auto-update-pre-commit
        name: "🦟 pre-commit · Auto-update pre-commit"
        entry: bash -c 'pre-commit autoupdate || true'
        language: system
        always_run: true
